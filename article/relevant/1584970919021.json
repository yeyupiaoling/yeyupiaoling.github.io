{"relevantArticles":[{"articleTitle":"给语音识别文本加上标点符号","articleAbstractText":"在语音识别中，模型输出的结果只是单纯的文本结果，并没有根据语法添加标点符号，本教程就是针对这种情况，在语音识别文本中根据语法情况加入标点符号，使得语音识别系统能够输出在标点符号的最终结果。","articleStatus":0,"articlePermalink":"/articles/1642836858327.html","articleImg1URL":"https://b3logfile.com/bing/20191209.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"PPASR语音识别（进阶级）","articleAbstractText":"PPASR（进阶级）基于PaddlePaddle2实现的端到端自动语音识别，相比入门级，进阶级从三个方面来提高模型的准确率，首先最主要的是更换了模型，这次采用了DeepSpeech2模型，DeepSpeech2是2015年百度发布的语音识别模型，其论文为《Baidu\u2019s Deep Speech 2 paper》 。然后也修改了音频的预处理，这次使用了在语音识别上更好的预处理，通过用FFT energy计算线性谱图。最后修改的是解码器，相比之前使用的贪心策略解码器，这次增加了集束搜索解码器，这个解码器可以加载语言模型，对解码的结果调整，使得预测输出语句更合理，从而提高准确率。","articleStatus":0,"articlePermalink":"/articles/1642836630991.html","articleImg1URL":"https://b3logfile.com/bing/20171230.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"PPASR流式与非流式语音识别","articleAbstractText":"本项目将分三个阶段分支，分别是入门级 、进阶级 和最终级 分支，当前为最终级，持续维护版本。PPASR中文名称PaddlePaddle中文语音识别（PaddlePaddle Automatic Speech Recognition），是一款基于PaddlePaddle实现的语音识别框架，PPASR致力于简单，实用的语音识别项目。可部署在服务器，Nvidia Jetson设备，未来还计划支持Android等移动设备。","articleStatus":0,"articlePermalink":"/articles/1642836825307.html","articleImg1URL":"https://b3logfile.com/bing/20200731.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"《PaddlePaddle从入门到炼丹》十三\u2014\u2014自定义图像数生成","articleAbstractText":"前言 我们在第六章介绍了生成对抗网络，并使用生成对抗网络训练mnist数据集，生成手写数字图片。那么本章我们将使用对抗生成网络训练我们自己的图片数据集，并生成图片。在第六章中我们使用的黑白的单通道图片，在这一章中，我们使用的是3通道的彩色图。 GitHub地址：https://github.com/yeyupiaoling/LearnPaddle2/tree/master/note13 定义数据读取 我们首先创建一个image_reader.py文件，用于读取我们自己定义的图片数据集。首先导入所需的依赖包。 import os import random from multiprocessing import cpu_count import numpy as np import paddle from PIL import Image 这里的图片预处理主要是对图片进行等比例压缩和中心裁剪，这里为了避免图片在图片在resize时出现变形的情况，导致训练生成的图片不是我们真实图片的样子。这里为了增强数据集，做了随机水平翻转。最后在处理图片的时候，为了避免数据集中有单通道图片导致训练中断.....","articleStatus":0,"articlePermalink":"/articles/1584975142214.html","articleImg1URL":"https://img.hacpai.com/bing/20191113.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"Python的Numpy实现深度学习常用的函数","articleAbstractText":"常用的激活函数 我们常用的激活函数有sigmoid，tanh，ReLU这三个函数，我们都来学习学习吧。 sigmoid函数 在深度学习中，我们经常会使用到sigmoid函数作为我们的激活函数，特别是在二分类上，sigmoid函数是比较好的一个选择，以下就是sigmoid函数的公式： $$ sigmoid(x) = \\frac{1}{1+e^{-x}}\\tag{1} $$ sigmoid函数的坐标图是： sigmoid函数的代码实现： import numpy as np def sigmoid(x): s = 1 / (1 + np.exp(-x)) return s 因为是使用numpy实现的sigmoid函数的，所以这个sigmoid函数可以计算实数、矢量和矩阵，如下面的就是当x是实数的时候： if name == 'main': x = 3 s = sigmoid(x) print s 然后会输出： 0.952574126822 当x是矢量或者矩阵是，计算公式如下： $$ sigmoid(x) = sigmoid\\begin{pmatrix} x_1 \\ ....","articleStatus":0,"articlePermalink":"/articles/1584976095161.html","articleImg1URL":"https://img.hacpai.com/bing/20200302.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}