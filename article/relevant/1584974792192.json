{"relevantArticles":[{"articleTitle":"给语音识别文本加上标点符号","articleAbstractText":"在语音识别中，模型输出的结果只是单纯的文本结果，并没有根据语法添加标点符号，本教程就是针对这种情况，在语音识别文本中根据语法情况加入标点符号，使得语音识别系统能够输出在标点符号的最终结果。","articleStatus":0,"articlePermalink":"/articles/1642836858327.html","articleImg1URL":"https://b3logfile.com/bing/20191209.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"《PaddlePaddle从入门到炼丹》十二\u2014\u2014自定义文本数据集分类","articleAbstractText":"前言 我们在第五章学习了循环神经网络，在第五章中我们使用循环神经网络实现了一个文本分类的模型，不过使用的数据集是PaddlePaddle自带的一个数据集，我们并没有了解到PaddlePaddle是如何使用读取文本数据集的，那么本章我们就来学习一下如何使用PaddlePaddle训练自己的文本数据集。我们将会从中文文本数据集的制作开始介绍，一步步讲解如何使用训练一个中文文本分类神经网络模型。 GitHub地址：https://github.com/yeyupiaoling/LearnPaddle2/tree/master/note12 爬取文本数据集 网络上一些高质量的中文文本分类数据集相当少，经过充分考虑之后，绝对自己从网络中爬取自己的中文文本数据集。在GitHub中有一个开源的爬取今日头条中文新闻标题的代码，链接地址请查看最后的参考资料。我们在这个开源代码上做一些简单修改后，就使用他来爬取数据。 创建一个download_text_data.py文件，这个就是爬取数据集的程序。首先导入相应的依赖包。 import os import random import requests im....","articleStatus":0,"articlePermalink":"/articles/1584975038292.html","articleImg1URL":"https://img.hacpai.com/bing/20180624.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"Python的Numpy实现深度学习常用的函数","articleAbstractText":"常用的激活函数 我们常用的激活函数有sigmoid，tanh，ReLU这三个函数，我们都来学习学习吧。 sigmoid函数 在深度学习中，我们经常会使用到sigmoid函数作为我们的激活函数，特别是在二分类上，sigmoid函数是比较好的一个选择，以下就是sigmoid函数的公式： $$ sigmoid(x) = \\frac{1}{1+e^{-x}}\\tag{1} $$ sigmoid函数的坐标图是： sigmoid函数的代码实现： import numpy as np def sigmoid(x): s = 1 / (1 + np.exp(-x)) return s 因为是使用numpy实现的sigmoid函数的，所以这个sigmoid函数可以计算实数、矢量和矩阵，如下面的就是当x是实数的时候： if name == 'main': x = 3 s = sigmoid(x) print s 然后会输出： 0.952574126822 当x是矢量或者矩阵是，计算公式如下： $$ sigmoid(x) = sigmoid\\begin{pmatrix} x_1 \\ ....","articleStatus":0,"articlePermalink":"/articles/1584976095161.html","articleImg1URL":"https://img.hacpai.com/bing/20200302.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"PPASR语音识别（进阶级）","articleAbstractText":"PPASR（进阶级）基于PaddlePaddle2实现的端到端自动语音识别，相比入门级，进阶级从三个方面来提高模型的准确率，首先最主要的是更换了模型，这次采用了DeepSpeech2模型，DeepSpeech2是2015年百度发布的语音识别模型，其论文为《Baidu\u2019s Deep Speech 2 paper》 。然后也修改了音频的预处理，这次使用了在语音识别上更好的预处理，通过用FFT energy计算线性谱图。最后修改的是解码器，相比之前使用的贪心策略解码器，这次增加了集束搜索解码器，这个解码器可以加载语言模型，对解码的结果调整，使得预测输出语句更合理，从而提高准确率。","articleStatus":0,"articlePermalink":"/articles/1642836630991.html","articleImg1URL":"https://b3logfile.com/bing/20171230.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"基于PaddlePaddle 2.0动态图实现的CRNN文字识别模型","articleAbstractText":"本项目是PaddlePaddle 2.0动态图实现的CRNN文字识别模型，可支持长短不一的图片输入。CRNN是一种端到端的识别模式，不需要通过分割图片即可完成图片中全部的文字识别。CRNN的结构主要是CNN+RNN+CTC，它们分别的作用是，使用深度CNN，对输入图像提取特征，得到特征图。使用双向RNN（BLSTM）对特征序列进行预测，对序列中的每个特征向量进行学习，并输出预测标签（真实值）分布。使用 CTC Loss，把从循环层获取的一系列标签分布转换成最终的标签序列。","articleStatus":0,"articlePermalink":"/articles/1642836351421.html","articleImg1URL":"https://b3logfile.com/bing/20180115.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}