{"relevantArticles":[{"articleTitle":"基于TNN在Android手机上实现图像分类","articleAbstractText":"TNN：由腾讯优图实验室打造，移动端高性能、轻量级推理框架，同时拥有跨平台、高性能、模型压缩、代码裁剪等众多突出优势。TNN框架在原有Rapidnet、ncnn框架的基础上进一步加强了移动端设备的支持以及性能优化，同时也借鉴了业界主流开源框架高性能和良好拓展性的优点。","articleStatus":0,"articlePermalink":"/articles/1642836165072.html","articleImg1URL":"https://b3logfile.com/bing/20190912.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"给语音识别文本加上标点符号","articleAbstractText":"在语音识别中，模型输出的结果只是单纯的文本结果，并没有根据语法添加标点符号，本教程就是针对这种情况，在语音识别文本中根据语法情况加入标点符号，使得语音识别系统能够输出在标点符号的最终结果。","articleStatus":0,"articlePermalink":"/articles/1642836858327.html","articleImg1URL":"https://b3logfile.com/bing/20191209.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"基于MNN在Android手机上实现图像分类","articleAbstractText":"MNN是一个轻量级的深度神经网络推理引擎，在端侧加载深度神经网络模型进行推理预测。目前，MNN已经在阿里巴巴的手机淘宝、手机天猫、优酷等20多个App中使用，覆盖直播、短视频、搜索推荐、商品图像搜索、互动营销、权益发放、安全风控等场景。此外，IoT等场景下也有若干应用。","articleStatus":0,"articlePermalink":"/articles/1642836094758.html","articleImg1URL":"https://b3logfile.com/bing/20190912.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"Android基于图像语义分割实现人物背景更换","articleAbstractText":"本教程是通过PaddlePaddle的PaddleSeg实现的，该开源库的地址为：http://github.com/PaddlPaddle/PaddleSeg ，使用开源库提供的预训练模型实现人物的图像语义分割，最终部署到Android应用上。关于如何在Android应用上使用PaddlePaddle模型，可以参考笔者的这篇文章《基于Paddle Lite在Android手机上实现图像分类》。","articleStatus":0,"articlePermalink":"/articles/1642602081399.html","articleImg1URL":"https://b3logfile.com/bing/20210316.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"《PaddlePaddle从入门到炼丹》十三\u2014\u2014自定义图像数生成","articleAbstractText":"前言 我们在第六章介绍了生成对抗网络，并使用生成对抗网络训练mnist数据集，生成手写数字图片。那么本章我们将使用对抗生成网络训练我们自己的图片数据集，并生成图片。在第六章中我们使用的黑白的单通道图片，在这一章中，我们使用的是3通道的彩色图。 GitHub地址：https://github.com/yeyupiaoling/LearnPaddle2/tree/master/note13 定义数据读取 我们首先创建一个image_reader.py文件，用于读取我们自己定义的图片数据集。首先导入所需的依赖包。 import os import random from multiprocessing import cpu_count import numpy as np import paddle from PIL import Image 这里的图片预处理主要是对图片进行等比例压缩和中心裁剪，这里为了避免图片在图片在resize时出现变形的情况，导致训练生成的图片不是我们真实图片的样子。这里为了增强数据集，做了随机水平翻转。最后在处理图片的时候，为了避免数据集中有单通道图片导致训练中断.....","articleStatus":0,"articlePermalink":"/articles/1584975142214.html","articleImg1URL":"https://img.hacpai.com/bing/20191113.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}