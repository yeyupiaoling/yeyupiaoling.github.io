{"relevantArticles":[{"articleTitle":"Windows10安装Linux子系统Ubuntu","articleAbstractText":"相信大部分同学都跟我一样都是使用Windows系统的，但是作为一个开发者来说，Linux命令是经常要用到的，在以前我们使用虚拟机安装Linux的，如果电脑配置低的话，就基本卡着不动了。在Windows10后，我们再也不用那么麻烦了，因为可以直接在Windows上安装子系统，这个子系统就是Ubuntu。 首先我们要打开Windows功能 在这里把勾打上 然后打开设置---&gt;更新和安全---&gt;针对开发人员，选择开发人员模式---&gt;确定启动就行了 笔者介绍两种安装方式，第一种是从应用商店中搜索获取，第二种是中PowerShell中使用命令安装。 第一种，应用商店中搜索获取 首先我们先打开Windows的应用商店，如果读者的开始菜单上有应用商店，就可以直接点击启动。 如果没有可以直接搜索Store。 然后在应用商店上搜索Ubuntu，可以得到以下的结果，我们点击获取这些应用，进入到下一个页面。 然后选择Ubuntu点击进入，因为笔者已经安装了，所以这里显示是已安装，如果没有安装，应该是显示免费下载。然后点进去获取安装即可。 安装成功之后，会有一个Ubuntu的图....","articleStatus":0,"articlePermalink":"/articles/1584871789572.html","articleImg1URL":"https://img.hacpai.com/bing/20181031.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"使用InteIIiJ IDEA开发Java web 项目","articleAbstractText":"1、介绍 IntelliJ IDEA是一款非常强大的集成开发环境，基本上可以做任何事情，它的强大大大降低了我们的工作量，提高了工作效率。那么它如何开发Java web呢？下面就为大家介绍使用IntelliJ IDEA开发Java web。 首先去官网下载安装包：http://www.jetbrains.com/idea 它有两个版本Ultimate（收费）和Community（免费），作者选择的是Ultimate 2、安装 点击下载即可，然后开始安装 安装完成后首次打开它会提示 然后是激活，我们选择试用 在做就可以进行开发了。 3、开发Java web项目（JDK和Tomcat的安装我就不介绍了） 启动一个新的项目 按照我的箭头选择，记得在Application Server中选择Tomcat服务器点击New可以选择服务器的路径 下一步就到这里 点击finish就行了 出现下面的图直接OK，意思是要创建一个文件夹 创建一个JSP文件 运行项目 点击运行，会自动在浏览器打开首页 打开刚才我们刚才创建的hello.jsp，直接点击浏览器的图标就可以了....","articleStatus":0,"articlePermalink":"/articles/1584872034302.html","articleImg1URL":"https://img.hacpai.com/bing/20180222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"学习SpringMVC笔记\u2014\u2014Intellij IDEA创建SpringMVC项目","articleAbstractText":"选择Spring→勾选SpringMVC→选择Download（让IDEA帮我们下载需要的jar包，可能会有点慢） 生成的一个项目（左），把lib文件夹移动到WEB-INF文件夹下（右） 配置文件的设置 为了方便管理，我把SpringMVC的配置文件都放在config的文件中 该文件的是与src文件同级的，修改如下： 打开项目设置（Ctrl+Shift+Alt+S）→Modules→（项目名称）→选择文件（config）→点击Sources 因为移动了配置文件了，要在wel.xml里重新配置文件的路径 applicationContext.xml dispatcher-servlet.xml 配置文件的移动完成了，可以开始动工项目了 Controller类 在 dispatcher-servlet.xml中添加返回路径的前缀和后缀 使用包扫描的方法，扫描Controller类 定义Controller类时，只要在类前添加 @Controller就可以了 方法的定义 @RequestMapping参数value的值值路径，method的值是访问方式，是一个数组或....","articleStatus":0,"articlePermalink":"/articles/1584873278348.html","articleImg1URL":"https://img.hacpai.com/bing/20191021.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"CentOS下安装和使用Mycat实现分布式数据库","articleAbstractText":"前言 在笔者的《在CentOS上使用Nginx和Tomcat搭建高可用高并发网站》这篇文章中，笔者介绍了如何在CentOS上搭建一个可支持高可用高并发的Java web后端服务器。善于思考的读者可能会想到，在上一篇文章中，我们只是实现Java web服务器的分布式来应对高并发，但是高并发对数据库的的负担也是很重的。在上一篇文章中，我们只是使用到一个MySQL服务器，但是但数据量非常大的时候，比如有一千万的用户，如果只有单个数据库存储，那一张用户表就有一千万条数据。庞大的数据量使得我们对数据进行查询的时候非常慢，但出现高并发的时候，大量的查询请求发送到数据库服务器，而数据库来不及响应，随时可能出现数据库崩溃的情况。 面对这个问题，我们使用Mycat来实现分布式数据库，假设我们有两个数据库服务器，那么一千万条的数据分开来存储，这样每个数据库只有五百万条数据，可以大大提高查询速度。如果有更多的数据库服务器，那么每个数据库所需要存储的数据就更少了，查询速度就会更快。基于这一个问题，我们就来学习如何在CentOS下安装和使用Mycat实现分布式数据库。 分布式数据库的整体架构： 总体架构 我们.....","articleStatus":0,"articlePermalink":"/articles/1584972765438.html","articleImg1URL":"https://img.hacpai.com/bing/20190709.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"MySQL数据库实现主从复制","articleAbstractText":"前言 我们用的在这篇文章《在CentOS上使用Nginx和Tomcat搭建高可用高并发网站》使用的只有一个MySQL数据库。 从安全角度来说这是非常不安全的，比如这个数据库服务器磁盘突然损坏了，里面的数据全部丢失了。这种情况如果一开始只是部署一个数据库的话就非常危险了，这表明我们要丢失全部数据，而数据对网站来说是最最重要的，所以我们要保证数据的安全。 从性能上来说，我们在《CentOS下安装和使用Mycat实现分布式数据库》这篇文章中介绍了分布式数据库，性能虽然比单个数据库的性能要好。但是当使用分布式数据库时，数据量还是很大，在查询数据时，可能会变得非常慢，导致锁表，一旦锁表就无法写入数据，就会影响其他用户的写入数据的操做。所以就需要读写分离，主（master）数据库负责写入数据，从（slave）数据库负责查询数据，就算从（slave）数据库在查询数据时出现了锁表，也不会影响到主（master）数据库的的写入操作，最多也是从（slave）数据库的数据更新的慢一些。基于这种情况，就出现了主从复制这个技术。 **主从复制：**就是有两个数据库服务器，一个是主（master）数据库服务器......","articleStatus":0,"articlePermalink":"/articles/1584972836923.html","articleImg1URL":"https://img.hacpai.com/bing/20180612.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}